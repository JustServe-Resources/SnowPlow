//import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id 'groovy'
    id 'com.github.erdi.webdriver-binaries' version '2.7'
    id 'com.github.erdi.idea-base' version '2.2'
    id("it.nicolasfarabegoli.conventional-commits") version '3.1.3'
    id("io.micronaut.application") version "4.5.0"
    id("com.gradleup.shadow") version "8.3.6"
    id("io.micronaut.aot") version "4.5.0"
}

group = 'org.justserve'
version = project.properties['SnowPlowVersion']

repositories {
    mavenCentral()
}

ext {
    drivers = [
            "firefox", "mobileFirefox", "tabletFirefox",
            "chrome", "mobileChrome", "tabletChrome",
            "dockerFirefox", "dockerMobileFirefox", "dockerTabletFirefox",
            "dockerChrome", "dockerMobileChrome", "dockerTabletChrome"
    ]
    gebVersion = project.properties['gebVersion']
    spockVersion = project.properties['spockVersion']
    seleniumVersion = project.properties['seleniumVersion']
    seleniumTestContainersVersion = project.properties['seleniumTestContainersVersion']
}


dependencies {
    implementation "org.gebish:geb-spock:${gebVersion}"
    implementation "org.spockframework:spock-core:${spockVersion}"
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("org.slf4j:jul-to-slf4j")
    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut:micronaut-http-validation")
    compileOnly("io.micronaut.serde:micronaut-serde-processor")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    testImplementation "software.xdev:testcontainers-selenium:$seleniumTestContainersVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"

    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP
        outputs.upToDateWhen { false }  // Always run tests
        useJUnitPlatform()
        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

application {
    mainClass = "org.justserve.Application"
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("org.justserve.*")
    }

}